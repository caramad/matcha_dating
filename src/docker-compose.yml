version: '3.9'

services:
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend/js:/backend/js
    environment:
      - CHOKIDAR_USEPOLLING=true  # Ensures React detects file changes
    env_file:
      - ./.env.development.local
    command: npm run dev  # Use a dev script that supports live reload
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - default
    ports:
      - "3000:3000"


  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app  # Sync local project with container for hot reloading
      - /app/node_modules  # Prevents overwriting installed dependencies
    depends_on:
      - backend
    ports:
      - "5000:5000"
    networks:
      - default
    environment:
      - CHOKIDAR_USEPOLLING=true  # Enables live reload inside Docker

  db:
    container_name: db
    image: postgis/postgis:latest
    restart: always
    env_file:
      - ./.env.development.local
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - default
    ports: 
      - "5432:5432"
    entrypoint: [ "bash", "-c", "docker-entrypoint.sh postgres & sleep 5 && psql -U postgres -d postgres -f /docker-entrypoint-initdb.d/init.sql && sleep infinity" ]

  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - backend
      - frontend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - default
    restart: unless-stopped
  
  tests_e2e:
    container_name: tests_e2e
    image: tests_e2e
    build:
      context: ./tests_e2e
      dockerfile: Dockerfile
    volumes:
      - ./tests_e2e/cypress:/tests/cypress
      - ./tests_e2e/cypress.config.js:/tests/cypress.config.js
    env_file:
      - ./.env.development.local
    depends_on:
      - backend
      - frontend
      - db
    networks:
      - default
  
  unit_test:
    container_name: unit_test
    build:
      context: ./unit_test
      dockerfile: Dockerfile
    volumes:
      - ./unit_test/tests:/app/tests
      - ./backend/js:/app/backend
    environment:
      - NODE_ENV=test
    depends_on:
      - backend
    networks:
      - default


networks:
  default:
    driver: bridge